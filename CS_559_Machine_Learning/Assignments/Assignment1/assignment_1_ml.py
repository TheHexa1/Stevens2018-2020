# -*- coding: utf-8 -*-
"""Assignment_1_ML.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mYDmGrDITr_qq2yUknJ9asyBDr42mMLK
"""

import pandas as pd
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import KFold
from sklearn import linear_model
from sklearn.model_selection import train_test_split

df_hour = pd.read_csv('hour.csv')

print(df_hour.columns)
print('\n')

# feature selection
df_hour_X = df_hour[['season', 'mnth', 'hr', 'workingday', 'weathersit', 'temp', 'hum', 'windspeed']]
df_hour_y = df_hour['cnt']

print(df_hour_X.head())
print('\n')

# splitting hour data in training and testing sets
hour_X_train, hour_X_test, hour_y_train, hour_y_test = train_test_split(df_hour_X, df_hour_y)

# hour dataset - without Kfold cross validation

# Lasso regression
l_reg = linear_model.Lasso(alpha=0.1)
l_reg.fit(hour_X_train, hour_y_train)

hour_l_predictions = l_reg.predict(hour_X_test)
print("Lasso Regression MSE on hour dataset: %f" % mean_squared_error(hour_y_test, hour_l_predictions))

# Ridge regression
r_reg = linear_model.Ridge(alpha=0.5)
r_reg.fit(hour_X_train, hour_y_train)

hour_r_predictions = r_reg.predict(hour_X_test)
print("Ridge Regression MSE on hour dataset: %f" % mean_squared_error(hour_y_test, hour_r_predictions))
print("Ridge coefficients: ", r_reg.coef_)
print('\n')

# Applying KFold cross validation with K=10
kf = KFold(n_splits=10)

for train, test in kf.split(df_hour_X):
  hour_X_train, hour_X_test = df_hour_X.iloc[train], df_hour_X.iloc[test]
  hour_y_train, hour_y_test = df_hour_y.iloc[train], df_hour_y.iloc[test]
  
  # Lasso regression
  l_reg = linear_model.Lasso(alpha=0.1)
  l_reg.fit(hour_X_train, hour_y_train)

  hour_l_predictions = l_reg.predict(hour_X_test)
  print("Lasso Regression MSE on hour dataset: %f" % mean_squared_error(hour_y_test, hour_l_predictions))

  # Ridge regression
  r_reg = linear_model.Ridge(alpha=0.5)
  r_reg.fit(hour_X_train, hour_y_train)

  hour_r_predictions = r_reg.predict(hour_X_test)
  print("Ridge Regression MSE on hour dataset: %f" % mean_squared_error(hour_y_test, hour_r_predictions))
  print('\n')

